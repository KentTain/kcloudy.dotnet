// <auto-generated />
using System;
using KC.DataAccess.Pay;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace KC.DataAccess.Pay.Migrations
{
    [DbContext(typeof(ComPayContext))]
    [Migration("20190904041713_initComPayContext")]
    partial class initComPayContext
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("cTest")
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("KC.Model.Pay.BankAccount", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AccountName")
                        .HasMaxLength(128);

                    b.Property<string>("AccountNum")
                        .HasMaxLength(32);

                    b.Property<int>("AccountType");

                    b.Property<string>("BankAccountType")
                        .HasMaxLength(10);

                    b.Property<string>("BankId")
                        .HasMaxLength(20);

                    b.Property<string>("BankName")
                        .HasMaxLength(256);

                    b.Property<int>("BankState");

                    b.Property<string>("CardNumber")
                        .HasMaxLength(32);

                    b.Property<string>("CardType")
                        .HasMaxLength(10);

                    b.Property<string>("CityCode")
                        .HasMaxLength(20);

                    b.Property<string>("CityName")
                        .HasMaxLength(128);

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("CrossMark")
                        .HasMaxLength(32);

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("MemberId")
                        .HasMaxLength(40);

                    b.Property<string>("ModifiedBy");

                    b.Property<DateTime>("ModifiedDate");

                    b.Property<string>("OpenBankCode")
                        .HasMaxLength(12);

                    b.Property<string>("OpenBankName")
                        .HasMaxLength(128);

                    b.Property<string>("ProvinceCode")
                        .HasMaxLength(20);

                    b.Property<string>("ProvinceName")
                        .HasMaxLength(128);

                    b.Property<string>("Remark");

                    b.HasKey("Id");

                    b.ToTable("pay_BankAccount","cTest");
                });

            modelBuilder.Entity("KC.Model.Pay.CashUsageDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("CashStatus");

                    b.Property<int>("CashType");

                    b.Property<DateTime>("ConsumptionDate");

                    b.Property<decimal>("ConsumptionMoney");

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("ModifiedBy");

                    b.Property<DateTime>("ModifiedDate");

                    b.Property<string>("PayeeCustomerDisplayName")
                        .HasMaxLength(128);

                    b.Property<string>("PayeeCustomerId")
                        .HasMaxLength(128);

                    b.Property<string>("PaymentCustomerDisplayName")
                        .HasMaxLength(128);

                    b.Property<string>("PaymentCustomerId")
                        .HasMaxLength(128);

                    b.Property<string>("PaymentMethod")
                        .HasMaxLength(128);

                    b.Property<int>("PaymentType");

                    b.Property<string>("ReferenceId")
                        .HasMaxLength(128);

                    b.Property<string>("Remark");

                    b.Property<int>("TradingAccount");

                    b.HasKey("Id");

                    b.ToTable("pay_CashUsageDetail","cTest");
                });

            modelBuilder.Entity("KC.Model.Pay.CautionMoneyLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ActionName")
                        .HasMaxLength(128);

                    b.Property<decimal>("Amount");

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<bool>("IsDeleted");

                    b.Property<bool>("IsReceivable");

                    b.Property<string>("ModifiedBy");

                    b.Property<DateTime>("ModifiedDate");

                    b.Property<string>("Operator")
                        .HasMaxLength(128);

                    b.Property<string>("OrderNum")
                        .HasMaxLength(128);

                    b.Property<string>("OtherParty")
                        .HasMaxLength(128);

                    b.Property<string>("PaymentNumber")
                        .HasMaxLength(128);

                    b.Property<string>("Remark");

                    b.Property<int>("Status");

                    b.HasKey("Id");

                    b.ToTable("pay_CautionMoneyLog","cTest");
                });

            modelBuilder.Entity("KC.Model.Pay.EntrustedPaymentRecord", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<int>("EntrustedPaymentStatus");

                    b.Property<string>("Guarantee")
                        .HasMaxLength(128);

                    b.Property<string>("GuaranteeTenantName")
                        .HasMaxLength(128);

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("ModifiedBy");

                    b.Property<DateTime>("ModifiedDate");

                    b.Property<string>("OrderId")
                        .HasMaxLength(128);

                    b.Property<string>("PayableNumber")
                        .HasMaxLength(128);

                    b.Property<decimal>("PaymentAmount");

                    b.Property<string>("Remark");

                    b.Property<string>("Seller")
                        .HasMaxLength(128);

                    b.Property<string>("SellerTenantName")
                        .HasMaxLength(128);

                    b.HasKey("Id");

                    b.ToTable("pay_EntrustedPaymentRecord","cTest");
                });

            modelBuilder.Entity("KC.Model.Pay.OfflinePayment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("AmountOfMoney");

                    b.Property<string>("BusinessNumber")
                        .HasMaxLength(128);

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("Customer")
                        .HasMaxLength(128);

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("ModifiedBy");

                    b.Property<DateTime>("ModifiedDate");

                    b.Property<string>("OrderId")
                        .HasMaxLength(128);

                    b.Property<DateTime>("PayDateTime");

                    b.Property<string>("PayableNumber")
                        .HasMaxLength(128);

                    b.Property<int?>("PayableSource");

                    b.Property<int?>("ReceivableSource");

                    b.Property<string>("Remark");

                    b.Property<int>("Status");

                    b.Property<string>("SupplementRemark");

                    b.HasKey("Id");

                    b.ToTable("pay_OfflinePayment","cTest");
                });

            modelBuilder.Entity("KC.Model.Pay.OfflineUsageBill", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("AmountOfMoney");

                    b.Property<bool>("BankBill");

                    b.Property<string>("BillNumber")
                        .HasMaxLength(128);

                    b.Property<string>("BusinessNumber")
                        .HasMaxLength(128);

                    b.Property<bool?>("CashPayment");

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("CreditUsageDetailId")
                        .HasMaxLength(128);

                    b.Property<string>("Customer")
                        .HasMaxLength(128);

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("ModifiedBy");

                    b.Property<DateTime>("ModifiedDate");

                    b.Property<string>("OrderId")
                        .HasMaxLength(128);

                    b.Property<DateTime>("PayDateTime");

                    b.Property<string>("PayableNumber")
                        .HasMaxLength(128);

                    b.Property<int?>("PayableSource");

                    b.Property<int?>("ReceivableSource");

                    b.Property<string>("Remark");

                    b.Property<int>("Status");

                    b.Property<string>("SupplementRemark");

                    b.HasKey("Id");

                    b.ToTable("pay_OfflineUsageBill","cTest");
                });

            modelBuilder.Entity("KC.Model.Pay.OnlinePaymentRecord", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BankName")
                        .HasMaxLength(128);

                    b.Property<string>("BankNumber")
                        .HasMaxLength(128);

                    b.Property<int>("ConfigId");

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("CurrencyType")
                        .HasMaxLength(128);

                    b.Property<string>("ErrorCode")
                        .HasMaxLength(128);

                    b.Property<string>("ErrorMessage");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("MemberId");

                    b.Property<string>("ModifiedBy");

                    b.Property<DateTime>("ModifiedDate");

                    b.Property<DateTime>("NextSearchTime");

                    b.Property<int>("OperationType");

                    b.Property<decimal>("OrderAmount");

                    b.Property<string>("OrderDatetime")
                        .HasMaxLength(128);

                    b.Property<string>("OrderNo")
                        .IsRequired()
                        .HasMaxLength(128);

                    b.Property<string>("PayDatetime")
                        .HasMaxLength(128);

                    b.Property<string>("PayResult")
                        .HasMaxLength(128);

                    b.Property<decimal>("PaymentAmount");

                    b.Property<string>("PaymentMethod")
                        .HasMaxLength(128);

                    b.Property<string>("PaymentOrderId")
                        .HasMaxLength(128);

                    b.Property<int>("PaymentType");

                    b.Property<string>("PeeMemberId");

                    b.Property<string>("ReturnDatetime")
                        .HasMaxLength(128);

                    b.Property<int>("SearchCount");

                    b.Property<string>("VerifyResult")
                        .HasMaxLength(128);

                    b.HasKey("Id");

                    b.ToTable("pay_OnlinePaymentRecord","cTest");
                });

            modelBuilder.Entity("KC.Model.Pay.Payable", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("AlreadyPayAmount");

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("Customer")
                        .HasMaxLength(128);

                    b.Property<string>("CustomerTenant")
                        .HasMaxLength(128);

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("ModifiedBy");

                    b.Property<DateTime>("ModifiedDate");

                    b.Property<decimal>("OrderAmount");

                    b.Property<string>("OrderId")
                        .HasMaxLength(128);

                    b.Property<decimal>("PayableAmount");

                    b.Property<string>("PayableNumber")
                        .HasMaxLength(128);

                    b.Property<decimal>("PointEqualMoney");

                    b.Property<string>("Remark")
                        .HasMaxLength(1024);

                    b.Property<int>("Source");

                    b.Property<DateTime>("StartDate");

                    b.Property<int>("Type");

                    b.Property<int>("UsePoint");

                    b.HasKey("Id");

                    b.ToTable("pay_Payable","cTest");
                });

            modelBuilder.Entity("KC.Model.Pay.PayableAndReceivableRecord", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("AmountOfMoney");

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("ModifiedBy");

                    b.Property<DateTime>("ModifiedDate");

                    b.Property<string>("Operator")
                        .HasMaxLength(128);

                    b.Property<DateTime>("PayDateTime");

                    b.Property<string>("PayableNumber")
                        .HasMaxLength(128);

                    b.Property<int>("PaymentType");

                    b.Property<string>("Remark");

                    b.HasKey("Id");

                    b.ToTable("pay_PayableAndReceivableRecord","cTest");
                });

            modelBuilder.Entity("KC.Model.Pay.PaymentAttachment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BlobId")
                        .HasMaxLength(128);

                    b.Property<string>("BusinessNumber")
                        .HasMaxLength(128);

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("FileName")
                        .HasMaxLength(128);

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("ModifiedBy");

                    b.Property<DateTime>("ModifiedDate");

                    b.Property<string>("Url")
                        .HasMaxLength(1024);

                    b.HasKey("Id");

                    b.ToTable("pay_PaymentAttachment","cTest");
                });

            modelBuilder.Entity("KC.Model.Pay.PaymentBankAccount", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AccountName")
                        .HasMaxLength(128);

                    b.Property<string>("AccountNo")
                        .HasMaxLength(36);

                    b.Property<DateTime>("AmountUpdateTime");

                    b.Property<string>("BankEId")
                        .HasMaxLength(128);

                    b.Property<string>("BindBankAccount")
                        .HasMaxLength(40);

                    b.Property<int>("BindBankAccountId");

                    b.Property<string>("BindBankAccountName")
                        .HasMaxLength(128);

                    b.Property<string>("BindBankId")
                        .HasMaxLength(20);

                    b.Property<string>("BindBankName");

                    b.Property<decimal>("CFWinFreezeAmount");

                    b.Property<decimal>("CFWinTotalAmount");

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<decimal>("FreezeAmount");

                    b.Property<bool>("IsDeleted");

                    b.Property<bool>("IsPlatformAccount");

                    b.Property<string>("MemberId")
                        .HasMaxLength(40);

                    b.Property<string>("ModifiedBy");

                    b.Property<DateTime>("ModifiedDate");

                    b.Property<string>("OpenBankCode")
                        .HasMaxLength(20);

                    b.Property<string>("OpenBankName")
                        .HasMaxLength(128);

                    b.Property<int>("PaymentType");

                    b.Property<int>("State");

                    b.Property<decimal>("TotalAmount");

                    b.HasKey("Id");

                    b.ToTable("pay_PaymentBankAccount","cTest");
                });

            modelBuilder.Entity("KC.Model.Pay.PaymentInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("ModifiedBy");

                    b.Property<DateTime>("ModifiedDate");

                    b.Property<string>("PaymentAccount");

                    b.Property<int>("PaymentType");

                    b.Property<string>("Phone");

                    b.Property<int>("State");

                    b.Property<string>("TenantName");

                    b.Property<string>("TradePassword");

                    b.HasKey("Id");

                    b.ToTable("pay_PaymentInfo","cTest");
                });

            modelBuilder.Entity("KC.Model.Pay.PaymentOperationLog", b =>
                {
                    b.Property<int>("ProcessLogId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("OperateDate");

                    b.Property<string>("Operator")
                        .HasMaxLength(50);

                    b.Property<string>("OperatorId");

                    b.Property<string>("PaymentNumber")
                        .HasMaxLength(128);

                    b.Property<string>("ReferenceId")
                        .HasMaxLength(128);

                    b.Property<string>("Remark");

                    b.Property<int>("Type");

                    b.HasKey("ProcessLogId");

                    b.ToTable("pay_PaymentOperationLog","cTest");
                });

            modelBuilder.Entity("KC.Model.Pay.PaymentRecord", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("ModifiedBy");

                    b.Property<DateTime>("ModifiedDate");

                    b.Property<string>("OrderNumber");

                    b.Property<string>("PayableNumber")
                        .HasMaxLength(128);

                    b.Property<string>("Payee")
                        .HasMaxLength(128);

                    b.Property<string>("PayeeTenant")
                        .HasMaxLength(128);

                    b.Property<decimal>("PaymentAmount");

                    b.Property<string>("PaymentNumber")
                        .HasMaxLength(128);

                    b.Property<int>("PaymentType");

                    b.Property<string>("Remark");

                    b.Property<int?>("Source");

                    b.Property<bool?>("Status");

                    b.Property<int>("TradingAccount");

                    b.HasKey("Id");

                    b.ToTable("pay_PaymentRecord","cTest");
                });

            modelBuilder.Entity("KC.Model.Pay.PaymentTradeRecord", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("InterfaceName")
                        .HasMaxLength(30);

                    b.Property<bool>("IsDeleted");

                    b.Property<bool>("IsSuccess");

                    b.Property<string>("MemberId");

                    b.Property<string>("Message");

                    b.Property<string>("ModifiedBy");

                    b.Property<DateTime>("ModifiedDate");

                    b.Property<int>("OperationType");

                    b.Property<string>("PaymentName")
                        .HasMaxLength(30);

                    b.Property<int>("PaymentType");

                    b.Property<string>("PostXML");

                    b.Property<int>("ReferenceId");

                    b.Property<string>("RetCode");

                    b.Property<string>("RetSrlNo")
                        .HasMaxLength(40);

                    b.Property<string>("ReturnXML");

                    b.Property<string>("SrlNo")
                        .HasMaxLength(40);

                    b.HasKey("Id");

                    b.ToTable("pay_PaymentTradeRecord","cTest");
                });

            modelBuilder.Entity("KC.Model.Pay.Receivable", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("AlreadyPayAmount");

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("Customer")
                        .HasMaxLength(128);

                    b.Property<string>("CustomerTenant")
                        .HasMaxLength(128);

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("ModifiedBy");

                    b.Property<DateTime>("ModifiedDate");

                    b.Property<decimal>("OrderAmount");

                    b.Property<string>("OrderId")
                        .HasMaxLength(128);

                    b.Property<string>("PayableNumber")
                        .HasMaxLength(128);

                    b.Property<decimal>("ReceivableAmount");

                    b.Property<string>("Remark")
                        .HasMaxLength(1024);

                    b.Property<int>("Source");

                    b.Property<DateTime>("StartDate");

                    b.Property<int>("Type");

                    b.HasKey("Id");

                    b.ToTable("pay_Receivable","cTest");
                });

            modelBuilder.Entity("KC.Model.Pay.VoucherPaymentRecord", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Amounts");

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("CreditUsageId")
                        .HasMaxLength(128);

                    b.Property<string>("Creditor")
                        .HasMaxLength(128);

                    b.Property<string>("CreditorBank")
                        .HasMaxLength(128);

                    b.Property<string>("CreditorBankNumber")
                        .HasMaxLength(128);

                    b.Property<string>("CreditorSocialCreditCode")
                        .HasMaxLength(128);

                    b.Property<string>("Debtor")
                        .HasMaxLength(128);

                    b.Property<string>("DebtorBank")
                        .HasMaxLength(128);

                    b.Property<string>("DebtorBankNumber")
                        .HasMaxLength(128);

                    b.Property<string>("DebtorSocialCreditCode")
                        .HasMaxLength(128);

                    b.Property<string>("FinancialInstitutionName")
                        .HasMaxLength(128);

                    b.Property<string>("FinancialInstitutionTenantName")
                        .HasMaxLength(128);

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("ModifiedBy");

                    b.Property<DateTime>("ModifiedDate");

                    b.Property<string>("OrderId")
                        .HasMaxLength(128);

                    b.Property<string>("PayableNumber")
                        .HasMaxLength(128);

                    b.Property<DateTime>("PaymentDate");

                    b.Property<int>("Status");

                    b.Property<string>("VoucherId")
                        .HasMaxLength(128);

                    b.HasKey("Id");

                    b.ToTable("pay_VoucherPaymentRecord","cTest");
                });
#pragma warning restore 612, 618
        }
    }
}

// <auto-generated />
using System;
using KC.DataAccess.Job;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace KC.DataAccess.Job.Migrations
{
    [DbContext(typeof(ComJobContext))]
    partial class ComJobContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("cTest")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.9")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("KC.Model.Job.Table.DatabaseVersionInfo", b =>
                {
                    b.Property<string>("RowKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedName")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("DatabaseName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedName")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("PartitionKey")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Tenant")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("Timestamp")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("VersionNumber")
                        .HasColumnType("int");

                    b.HasKey("RowKey");

                    b.ToTable("job_DatabaseVersionInfo", "cTest");
                });

            modelBuilder.Entity("KC.Model.Job.Table.QueueErrorMessage", b =>
                {
                    b.Property<string>("RowKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedName")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ErrorFrom")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ErrorMessage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedName")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("PartitionKey")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("QueueMessage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("QueueName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("QueueType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SourceFrom")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tenant")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("Timestamp")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("RowKey");

                    b.ToTable("job_QueueErrorMessage", "cTest");
                });

            modelBuilder.Entity("KC.Model.Job.Table.ThreadConfigInfo", b =>
                {
                    b.Property<string>("RowKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("ConversionCheckInterval")
                        .HasColumnType("int");

                    b.Property<int>("ConversionTimeoutInMinutes")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedName")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<bool>("EnableConversionMonitor")
                        .HasColumnType("bit");

                    b.Property<bool>("EnableConversionService")
                        .HasColumnType("bit");

                    b.Property<bool>("EnableEmailService")
                        .HasColumnType("bit");

                    b.Property<bool>("EnableFullTextSearchIndexer")
                        .HasColumnType("bit");

                    b.Property<bool>("EnableLiveBackup")
                        .HasColumnType("bit");

                    b.Property<bool>("EnableMetricDatabaseSync")
                        .HasColumnType("bit");

                    b.Property<bool>("EnableNotificationService")
                        .HasColumnType("bit");

                    b.Property<bool>("EnableTenantArchiveService")
                        .HasColumnType("bit");

                    b.Property<bool>("EnableTenantRestoreService")
                        .HasColumnType("bit");

                    b.Property<bool>("EnableTenantSandboxService")
                        .HasColumnType("bit");

                    b.Property<bool>("EnableUploadProcessing")
                        .HasColumnType("bit");

                    b.Property<int>("FullTextSearchCheckingIntervalInMinutes")
                        .HasColumnType("int");

                    b.Property<string>("HostName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsEnabled")
                        .HasColumnType("bit");

                    b.Property<bool>("KeepThisConfig")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastAccessTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LastModifyTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("MaxRetryTimeForConversion")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedName")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("PartitionKey")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SelectedPdfLibrary")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tenant")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("Timestamp")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("WorkerRoleId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RowKey");

                    b.ToTable("job_ThreadConfigInfo", "cTest");
                });

            modelBuilder.Entity("KC.Model.Job.Table.ThreadStatusInfo", b =>
                {
                    b.Property<string>("RowKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedName")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<int>("Failures")
                        .HasColumnType("int");

                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedName")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("PartitionKey")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Successes")
                        .HasColumnType("int");

                    b.Property<string>("Tenant")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ThreadName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("Timestamp")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTime>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("WorkerRoleId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RowKey");

                    b.ToTable("job_ThreadStatusInfo", "cTest");
                });
#pragma warning restore 612, 618
        }
    }
}

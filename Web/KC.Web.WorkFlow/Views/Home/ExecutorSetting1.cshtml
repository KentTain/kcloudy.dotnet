@using KC.Framework.Extension
@using KC.Framework.Tenant;
@using KC.Web.Constants

<!DOCTYPE html>
<html>
<head>
    <meta charset="UTF-8">
    <title>鑫亚科技流程设计器</title>
    <link href="~/lib/font-awesome/css/font-awesome.css" rel="stylesheet" />
    <link href="@(KC.Framework.Base.GlobalConfig.ResWebDomain)lib/jquery-easyui/themes/icon.css" rel="stylesheet" />
    <link href="@(KC.Framework.Base.GlobalConfig.ResWebDomain)lib/jquery-easyui/themes/metro/easyui.css" rel="stylesheet" />

<style>
form fieldset{background:rgba(255,255,255,.3);border-color:#ddd;border-style:solid;border-width:1px;-moz-border-radius:5px;-webkit-border-radius:5px;-khtml-border-radius:5px;border-radius:5px;line-height:30px;list-style:none;padding:5px 10px;margin-bottom:2px}
form fieldset legend{color:#777;font-weight:700;text-align:left}
.window,.window .window-body{overflow:hidden}
#orgLayout .datagrid-body{overflow:auto}
#roleLayout>div{width:48%!important;height:100%!important;margin:5px;float:left;border:1px solid #ddd}
#roleLayout .datagrid-body{overflow:auto}
#userLayout [id*='_easyui_tree']{height:22px}
#userLayout>div{width:31%!important;height:100%!important;margin:5px;float:left;border:1px solid #ddd}
#userLayout .datagrid-body{overflow:auto}
#roleLayout .panel-body,#userLayout .panel-body,div.panel-header.panel-title{height:auto;border-width:0 0 1px 0;border-color:#ddd}
</style>

    <script src="@(KC.Framework.Base.GlobalConfig.ResWebDomain)lib/jquery/dist/jquery.min.js"></script>
    <script src="@(KC.Framework.Base.GlobalConfig.ResWebDomain)lib/jquery/dist/jquery.extension.js"></script>
    <script src="@(KC.Framework.Base.GlobalConfig.ResWebDomain)lib/jquery-easyui/jquery.easyui.min.js"></script>
    <script src="@(KC.Framework.Base.GlobalConfig.ResWebDomain)lib/jquery-easyui/jquery.easyui.extension.js"></script>
    <script src="@(KC.Framework.Base.GlobalConfig.ResWebDomain)lib/jquery-easyui/locale/easyui-lang-zh_CN.js"></script>
    <script src="@(KC.Framework.Base.GlobalConfig.ResWebDomain)js/common/com.common.js"></script>
    <script src="@(KC.Framework.Base.GlobalConfig.ResWebDomain)js/com.easyui.extension.js"></script>
</head>

<body class="easyui-layout">
    <a href="javascript:void(0)" class="easyui-linkbutton" onclick="selectUserForm()"  data-options="iconCls:'fa fa-users'">选择审批人</a>
    <div id="settingLayout" class="easyui-tabs" data-options="tabWidth:160,">
        <div id="tabCommonSetting" title="常用设置" data-options="closable: false,refreshable: false,">
        </div>
        <div id="tabSelectSetting" title="选择组织、角色及用户" data-options="closable: false,refreshable: false,">
        </div>
    </div>
    <script type="text/javascript">
    function OrganizationVM() {
        let me = this;
        let _selectedOrgs = [];
        let _selectedRoles = [];
        let _unSelectedRoles = [];
        let _unSelectedRoleIds = [];
        let _selectedUsers = [];
        let _unSelectedUsers = [];
        let _unSelectedUserIds = [];
        const _tabLyoutId = '#settingLayout';
        const _orgLayoutId = '#orgLayout';
        const _loadDataUrl = '@Url.Action(ActionNameBase.GetOrgsWithUsersByRoleIdsAndOrgids, ControllerNameBase.Account)';
        let options = {
            type: 7, //1:组织; 2:角色; 4; 用户; 3(1+2):组织+角色; 6(2+4):角色+用户; 7(1+2+4):所有
            title: "选择用户",
            selectUserUrl: _loadDataUrl,
            orgIds: [],                 //需要查询的部门Id列表
            roleIds: [],                //需要查询的角色Id列表
            exceptOrgIds: [],           //需要排除的部门Id列表
            exceptRoleIds: [],          //需要排除的角色Id列表
            isSingleSelect: true,       //是否单选
            allowClose: true,           //是否允许关闭
            showUserName: true,         //是否显示用户名
            showExceptUserBtn: false,   //是否显示排除用户设置（功能还未实现）
            callback: null,             //回调函数
            selectSetting: 0,           //默认的执行人设置：0：选择组织、角色及用户、>=1:常用设置
            selectOrgIds: null,         //已选中的组织Id列表
            selectOrgNames: null,       //已选中的组织名称列表
            selectRoleIds: null,        //已选中的角色Id列表
            selectRoleNames: null,      //已选中的角色名称列表
            selectUserIds: null,        //已选中的人员Id列表
            selectUserNames: null,      //已选中的人员名称列表
            selectExceptUserIds: null,
            selectExceptUserNames: null,
            referenceId: null,
            orgInfos: [],
            roleInfos: [],
        };
        me._orgInfos = [];
        me._roleInfos = [];
        me.ShowDialog = function () {
            //debugger;
            let $layout = $("<div id='settingLayout' class='easyui-tabs' data-options=\"tabWidth:160,\"></div>");
            $layout = $('<div id="settingLayout" class="easyui-tabs" data-options="tabWidth:160,">' +
                    '<div id="tabCommonSetting" title="常用设置" data-options=\"closable: false,refreshable: false,\">' +
                    '</div>' +
                    '<div id="tabSelectSetting" title="选择组织、角色及用户" data-options="closable: false,refreshable: false">' +
                    '</div>' +
                '</div>');
            //Tab：常用设置
            let $tabCommom = $("<div id='tabCommonSetting'></div>");
            let $settingDiv = $(
                "<div class='easyui-layout'>" +
                "            <form id='auditNodeForm'>" +
                "                <fieldset>" +
                "                    <legend>与流程发起人相关</legend>" +
                "                    <div style='margin-bottom:10px'>" +
                "                        <input class='easyui-radiobutton' name='executorSetting' value='10' label='流程发起人的主管' data-options='labelPosition:\"after\",labelWidth:230,checked:true' />" +
                "                    </div>" +
                "                    <div style='margin-bottom:10px'>" +
                "                        <input class='easyui-radiobutton' name='executorSetting' value='11' label='流程发起人所在组织' data-options='labelPosition:\"after\",labelWidth:230' />" +
                "                    </div>" +
                "                    <div style='margin-bottom:10px'>" +
                "                        <input class='easyui-radiobutton' name='executorSetting' value='12' label='流程发起人所属角色' data-options='labelPosition:\"after\",labelWidth:230' />" +
                "                    </div>" +
                "                </fieldset>" +
                "                <fieldset>" +
                "                    <legend>与提交审批人相关</legend>" +
                "                    <div style='margin-bottom:10px'>" +
                "                        <input class='easyui-radiobutton' name='executorSetting' value='20' label='提交审批人的主管' data-options='labelPosition:\"after\",labelWidth:230' />" +
                "                    </div>" +
                "                    <div style='margin-bottom:10px'>" +
                "                        <input class='easyui-radiobutton' name='executorSetting' value='21' label='提交审批人所在组织' data-options='labelPosition:\"after\",labelWidth:230' />" +
                "                    </div>" +
                "                    <div style='margin-bottom:10px'>" +
                "                        <input class='easyui-radiobutton' name='executorSetting' value='22' label='提交审批人所属角色' data-options='labelPosition:\"after\",labelWidth:230' />" +
                "                    </div>" +
                "                </fieldset>" +
                "            </form>" +
                "        </div>");
            //$settingDiv.appendTo($tabCommom);
            $('#tabCommonSetting').empty();
            $settingDiv.appendTo('#tabCommonSetting');

            //Tab：选择组织、角色及用户
            let $tabSelect = "<div id='tabSelectSetting' class='easyui-layout'></div>";
            //选择结果
            let $inputDiv = $('<div></div>');
            let $inputDiv1 = $('<div style="margin:5px 40px">' +
                '<input id="txtSelectedOrgNames" class="easyui-textbox" name="name" style="width:95%" data-options="label:\'已选组织: \',readonly:true"/>' +
                '</div>');
            let $inputDiv2 = $('<div style="margin:5px 40px">' +
                '<input id="txtSelectedRoleNames" class="easyui-textbox" name="email" style="width:95%" data-options="label:\'已选角色: \',readonly:true">' +
                '</div>');
            let $inputDiv3 = $('<div style="margin:5px 40px">' +
                '<input id="txtSelectedUserNames" class="easyui-textbox" name="email" style="width:95%" data-options="label:\'已选用户: \',readonly:true"/>' +
                '</div>');
            let $inputDiv4 = $('<div style="margin:5px 40px">' +
                '<input id="txtSelectedExceptUserNames" class="easyui-textbox" name="email" style="width:95%" data-options="label:\'排除用户: \',readonly:true"/>' +
                '' +
                '</div>');
            $inputDiv1.appendTo($inputDiv);
            $('#txtSelectedOrgNames').textbox({ label: '已选组织：', readonly: true });
            $inputDiv2.appendTo($inputDiv);
            $('#txtSelectedRoleNames').textbox({ label: '已选角色：', readonly: true });
            $inputDiv3.appendTo($inputDiv);
            $('#txtSelectedUserNames').textbox({ label: '已选用户：', readonly: true });

            //下方Tab页签设置
            var $tabs = $('<div class="easyui-tabs"></div>');
            //选择组织
            let $orglayout = $('<table id="orgLayout" style="width:610px;margin: 5px;"></table>');

            //选择角色
            let $roleLayout = $('<div id="roleLayout" style="height:300px;margin: 5px;"></div>');
            let $unselectedRole = $('<div><div class="panel-header panel-title">双击添加角色</div><table id="UnselectedRolesData"></table></div>');
            let $selectedRole = $('<div><div class="panel-header panel-title">选中角色（双击移除角色）</div><table id="SelectedRolesData"></table></div>');
            $unselectedRole.appendTo($roleLayout);
            $selectedRole.appendTo($roleLayout);

            //选择用户
            let $userlayout = $('<div id="userLayout" style="height:300px;margin: 5px;"></div>');
            let $orgFilter = $('<div><ui id="selectOrgTree" style="height:270px;overflow-y:auto;"></ui></div>');
            let $unselectedUser = $('<div><div class="panel-header panel-title">双击添加用户</div><div id="UnselectedUsersData" style="height:280px;overflow-y:auto;"></div></div>');
            let $selectedUser = $('<div><div class="panel-header panel-title">选中用户（双击移除用户）</div><div id="SelectedUsersData" style="height:280px;overflow-y:auto;"></div></div>');
            $orgFilter.appendTo($userlayout);
            $unselectedUser.appendTo($userlayout);
            $selectedUser.appendTo($userlayout);

            $tabs.tabs({
                tabWidth: 130,
                height: 360,
                width: 700,
                closable: false,
                refreshable: false,
            })
            .tabs('add', {
                height: 300,
                title: '选择组织',
                content: $orglayout,
                closable: false,
                refreshable: false,
            })
            .tabs('add', {
                height: 300,
                title: '选择角色',
                content: $roleLayout,
                closable: false,
                refreshable: false,
                cls:'hidden-overflow'
            }).tabs('add', {
                height: 300,
                title: '选择用户',
                content: $userlayout,
                closable: false,
                refreshable: false,
                cls: 'hidden-overflow'
            });

            //$inputDiv.appendTo($tabSelect);
            //$tabs.appendTo($tabSelect);

            $('#tabSelectSetting').empty();
            $inputDiv.appendTo('#tabSelectSetting');
            $tabs.appendTo('#tabSelectSetting');

            //$layout.tabs({
            //    fit: true,
            //    tabWidth: 160,
            //    closable: false,
            //    refreshable: false,
            //})
            //.tabs('add', {
            //    fit: true,
            //    title: '常用设置',
            //    content: $tabCommom,
            //    closable: false,
            //    refreshable: false,
            //})
            //.tabs('add', {
            //    fit: true,
            //    title: '选择组织、角色及用户',
            //    content: $tabSelect,
            //    closable: false,
            //    refreshable: false,
            //});

            //根据传入执行人设置值，设置Radio的默认选中项
            if (options.selectSetting > 0) {
                let settingItems = $("input.easyui-radiobutton[radiobuttonname='executorSetting'][value='" + options.selectSetting + "']");
                if (settingItems && settingItems.length > 0) {
                    $(settingItems[0]).radiobutton({ checked: true });
                }
            }
            $.easyui.showDialog({
                title: options.title,
                // 弹框top=滚动条到页面顶部的距离+（页面显示的高度-弹框的高度）/2
                top: $(document).scrollTop() + 62,
                width: 720,
                height: 600,
                modal: true,
                topMost: false,
                draggable: false,
                autoDestroy: false,
                enableHeaderContextMenu: false,
                enableApplyButton: false,
                content: $(_tabLyoutId),
                onOpen: function () {
                    let useOrg = (1 & options.type) == 1;
                    let useRole = (2 & options.type) == 2;
                    let useUser = (4 & options.type) == 4;

                    //设置Input值
                    if (useOrg && options.selectOrgNames && options.selectOrgNames.length > 0)
                        $('#txtSelectedOrgNames').textbox('setValue', options.selectOrgNames.join(','));
                    if (useRole && options.selectRoleNames && options.selectRoleNames.length > 0)
                        $('#txtSelectedRoleNames').textbox('setValue', options.selectRoleNames.join(','));
                    if (useUser && options.selectUserNames && options.selectUserNames.length > 0)
                        $('#txtSelectedUserNames').textbox('setValue', options.selectUserNames.join(','));
                    if (useUser && options.selectExceptUserNames && options.selectExceptUserNames.length > 0)
                        $('#txtSelectedExceptUserNames').textbox('setValue', options.selectUserNames.join(','));
                },
                onSave: function (d) {
                    //debugger;
                    let selectTab = $(_tabLyoutId).tabs('getSelected')[0];
                    let checkedSetting = 0;
                    //选择常用设置时，需要设置ExecutorSetting，默认为：0-选择组织、角色及用户
                    if (selectTab.id === 'tabCommonSetting') {
                        let selectedItems = $(".radiobutton.radiobutton-checked").find("input[name='executorSetting']");
                        if (selectedItems && selectedItems.length > 0) {
                            let selectedItem = selectedItems[0];
                            if (!$.string.isNullOrEmpty(selectedItem.value))
                                checkedSetting = parseInt(selectedItem.value);
                        }

                        options.callback({
                            executorSetting: checkedSetting,
                            referenceId: options.referenceId,
                            orgs: [],
                            roles: [],
                            users: []
                        }, d);
                    } else {
                        options.callback({
                            executorSetting: 0,
                            referenceId: options.referenceId,
                            orgs: _selectedOrgs,
                            roles: _selectedRoles,
                            users: _selectedUsers
                        }, d);
                    }

                    if (!options.allowClose)
                        return false;
                },
                onClose: function () {
                    me.HideDialog();
                }
            });
        };
        me.HideDialog = function () {
            $('#divSelectUser').hide();
        };

        me.InitializeData = function (opt) {
            options = $.extend(options, opt);
            if (options.orgInfos && options.orgInfos.length > 0)
                me._orgInfos = options.orgInfos;
            if (options.roleInfos && options.roleInfos.length > 0)
                me._roleInfos = options.roleInfos;

            me.ShowDialog();

            if (me._orgInfos == undefined
                || me._orgInfos == null
                || me._orgInfos.length <= 0) {
                $.easyui.loading({ msg: '正在载入数据，请稍等...' });
                $.ajax({
                    url: options.selectUserUrl,
                    type: "POST",
                    async: true,
                    data: {
                        'type': options.type,
                        'orgIds': options.orgIds,
                        'roleIds': options.roleIds,
                        'exceptOrgIds': options.exceptOrgIds,
                        'exceptRoleIds': options.exceptRoleIds
                    },
                    success: function (data) {
                        me._orgInfos = data.orgInfos;
                        me._roleInfos = data.roleInfos;
                        //加载选择组织UI数据
                        initOrgTreeGrid();

                        //加载选择角色UI数据
                        loadRolesData(me._roleInfos);
                        initUnselectedRoles();
                        initSelectedRoles();

                        //加载选择用户UI数据
                        initOrgFilter();
                        if (options.selectUserIds != null)
                            loadUsersByUserId(me._orgInfos);

                        initUnselectedUsers();
                        initSelectedUsers();
                    },
                    error: function () {
                        $.messager.showErrorTopCenter('', '载入组织用户数据失败，请重试。');
                    },
                    complete: function () {
                        $.easyui.loaded();
                    }
                });
            } else {
                _selectedUsers = [];
                _selectedRoles = [];
                //加载选择组织UI数据
                initOrgTreeGrid();

                //加载选择角色UI数据
                loadRolesData(me._roleInfos);
                initUnselectedRoles();
                initSelectedRoles();

                //加载选择用户UI数据
                if (options.selectUserIds != null
                    && options.selectUserIds.length > 0) {
                    loadUsersByUserId(me._orgInfos);
                }
                initOrgFilter();
                initUnselectedUsers();
                initSelectedUsers();
            }
        };
        //初始化UI：选择组织页签
        let initOrgTreeGrid = function () {
            let orgs = me._orgInfos;
            setSelectedTreeNode(orgs, options.selectOrgIds);
            //debugger;
            let $dataGrid = $(_orgLayoutId).tree({
                data: orgs,
                idField: 'id',
                treeField: 'text',
                striped: true,
                pagination: false,
                fitColumns: true,
                rowNumbers: true,
                singleSelect: false,
                nowrap: false,
                fit: true,
                lines: true,
                showFooter: false,
                checkbox: true,
                cascadeCheck: false,
                columns: [
                    [
                        { field: 'checked', checkbox: true, title: 'checked', align: 'left' },
                        { field: 'text', title: '角色名称', width: '20%', align: 'left' },
                        { field: 'organizationTypeString', title: '描述', width: '40%', align: 'left' }
                    ]
                ],
                onLoadSuccess: function (row, data) {
                    if (data.length > 0) {
                        if (_selectedOrgs !== undefined && _selectedOrgs !== null && _selectedOrgs.length > 0) {
                            for (let i = 0; i < _selectedOrgs.length; i++) {
                                //找到第一个元素
                                var n = $(_orgLayoutId).tree('find', _selectedOrgs[i].id);
                                //调用选中事件
                                $(_orgLayoutId).tree('check', n.target);
                            }
                        }
                    }
                },
                onLoadError: function () {
                },
                onClick: function (row) {
                    if (row.checked) {
                        $dataGrid.tree('uncheck', row.target);
                    } else {
                        $dataGrid.tree('check', row.target);
                    }
                },
                onCheck: function (row, checked) {
                    if (checked) {
                        if (!$.array.contains(_selectedOrgs, row, function (a, b) {
                            return a.id == b.id;
                        })) {
                            _selectedOrgs.push(row);
                        }
                    } else {
                        //jquery.extension.coreArray.remove(arr,item, function compare(a,b){return true;})
                        $.array.remove(_selectedOrgs, row, function (a, b) {
                            return a.id == b.id;
                        });
                    }
                    let names = _selectedOrgs.map(function (r, index, arr) { return r.text; }).join(',');
                    $('#txtSelectedOrgNames').textbox('setValue', names);
                }
            });
        };
        let setSelectedTreeNode = function (orgs, selectOrgIds) {
            if (orgs !== undefined && orgs !== null && orgs.length > 0) {
                for (let i = 0; i < orgs.length; i++) {
                    let org = orgs[i];
                    let orgId = org.id;
                    let index = $.inArray(orgId, selectOrgIds);
                    if (index !== -1) {
                        org.checked = true;
                        _selectedOrgs.push(org);
                    }

                    if (org.children && org.children.length > 0) {
                        setSelectedTreeNode(org.children, selectOrgIds);
                    }
                }
            }
        };

        //初始化UI：选择角色页签
        let initUnselectedRoles = function () {
            $('#UnselectedRolesData').datalist({
                data: _unSelectedRoles,
                valueField: 'roleId',
                textField: 'displayName',
                fit: true,
                fitColumns: true,
                singleSelect: true,
                onDblClickRow: function (index, row) {
                    if (options.isSingleSelect) {
                        _unSelectedRoles.push(_selectedRoles[0]);
                        _selectedRoles = [];
                    }
                    _selectedRoles.push(row);
                    _unSelectedRoles.splice(index, 1);
                    let names = _selectedRoles.map(function (r, index, arr) { return r.displayName; }).join(',');
                    $('#txtSelectedRoleNames').textbox('setValue', names);
                    initUnselectedRoles();
                    initSelectedRoles();
                },
                textFormatter: function (value, row, index) {
                    return value;
                }
            });
        };
        let initSelectedRoles = function () {
            $('#SelectedRolesData').datalist({
                data: _selectedRoles,
                valueField: 'roleId',
                textField: 'displayName',
                fit: true,
                fitColumns: true,
                singleSelect: true,
                onDblClickRow: function (index, row) {
                    _selectedRoles.splice(index, 1);
                    _unSelectedRoles.push(row);
                    //$.array.remove(options.selectUserIds, row.roleId);
                    let names = _selectedRoles.map(function (r, index, arr) { return r.displayName; }).join(',');
                    $('#txtSelectedRoleNames').textbox('setValue', names);
                    initUnselectedRoles();
                    initSelectedRoles();
                }, textFormatter: function (value, row, index) {
                    return value;
                }
            });
        };
        let loadRolesData = function (roles) {
            _unSelectedRoles = [];
            _unSelectedRoleIds = [];

            if (roles !== undefined && roles !== null && roles.length > 0) {
                for (let j = 0; j < roles.length; j++) {
                    let roleId = roles[j].roleId;
                    //let roleId = $.trim(roles[j].roleId.toLowerCase());
                    let index = $.inArray(roleId, options.selectRoleIds);
                    if (index !== -1) {
                        _selectedRoles.push(roles[j]);
                    } else {
                        _unSelectedRoles.push(roles[j]);
                        _unSelectedRoleIds.push(roleId);
                    }
                }
            }
        }

        //初始化UI：选择用户页签
        let initOrgFilter = function () {
            $('#selectOrgTree').tree({
                data: me._orgInfos,
                height: 340,
                onClick: function (node) {
                    initUnselectedUsers();
                }
            });
        };
        let initUnselectedUsers = function () {
            _unSelectedUsers = [];
            _unSelectedUserIds = [];
            let selectedOrg = $("#selectOrgTree").tree('getSelected');
            selectedOrg == null ? getAllOrgsNestedUsers(me._orgInfos) : getAllOrgsNestedUsers([selectedOrg]);
            for (let j = 0; j < _selectedUsers.length; j++) {
                let userId = _selectedUsers[j].userId;
                //let userId = $.trim(_selectedUsers[j].userId.toLowerCase());
                for (let k = 0; k < _unSelectedUserIds.length; k++) {
                    if (userId === _unSelectedUserIds[k]) {
                        _unSelectedUsers.splice(k, 1);
                        _unSelectedUserIds.splice(k, 1);
                    }
                }
            }
            $('#UnselectedUsersData').datalist({
                data: _unSelectedUsers,
                valueField: 'userId',
                textField: 'displayName',
                fit: true,
                fitColumns: true,
                singleSelect: true,
                onDblClickRow: function (index, row) {
                    if (options.isSingleSelect) {
                        _selectedUsers = [];
                    }
                    _selectedUsers.push(row);
                    let names = _selectedUsers.map(function (r, index, arr) { return r.displayName; }).join(',');
                    $('#txtSelectedUserNames').textbox('setValue', names);
                    initUnselectedUsers();
                    initSelectedUsers();
                },
                textFormatter: function (value, row, index) {
                    if (options.showUserName)
                        return value + "(" + row.userName + ")";
                    return value;
                }
            });
        };
        let initSelectedUsers = function () {
            $('#SelectedUsersData').datalist({
                data: _selectedUsers,
                valueField: 'userId',
                textField: 'displayName',
                fit: true,
                fitColumns: true,
                singleSelect: true,
                onDblClickRow: function (index, row) {
                    _selectedUsers.splice(index, 1);
                    let names = _selectedUsers.map(function (r, index, arr) { return r.displayName; }).join(',');
                    $('#txtSelectedUserNames').textbox('setValue', names);
                    initUnselectedUsers();
                    initSelectedUsers();
                }, textFormatter: function (value, row, index) {
                    if (options.showUserName)
                        return value + "(" + row.userName + ")";
                    return value;
                }
            });
        };
        let getAllOrgsNestedUsers = function (orgsWithUsers) {
            if (typeof (orgsWithUsers) === undefined || orgsWithUsers.length === 0)
                return;
            for (let i = 0; i < orgsWithUsers.length; i++) {
                let org = orgsWithUsers[i];
                if (org == undefined || org == null
                    || org.users == undefined || org.users == null)
                    continue;
                for (let j = 0; j < org.users.length; j++) {
                    let userId = org.users[j].userId;
                    //let userId = $.trim(org.users[j].userId.toLowerCase());
                    let index = $.inArray(userId, _unSelectedUserIds);
                    if (index === -1) {
                        _unSelectedUsers.push(org.users[j]);
                        _unSelectedUserIds.push(userId);
                    }
                }
                getAllOrgsNestedUsers(org.children);
            }
        };
        let loadUsersByUserId = function (org) {//筛选初始化选中的数据
            if (options.selectUserIds.length === 0)
                return;
            if (typeof (org) === undefined || org.length === 0)
                return;
            for (let i = 0; i < org.length; i++) {
                loadUsersByUserId(org[i].children);
                if (org[i].users == null)
                    continue;
                for (let j = 0; j < org[i].users.length; j++) {
                    let userId = org[i].users[j].userId;
                    //let userId = $.trim(org[i].users[j].userId.toLowerCase());
                    let index = $.inArray(userId, options.selectUserIds);
                    if (index !== -1) {
                        _selectedUsers.push(org[i].users[j]);
                        options.selectUserIds.splice(index, 1);
                        if (options.selectUserIds.length === 0)
                            return;
                    }
                }
            }
        };
    }
    </script>

    <script>
        var organization = null;
        $(function () {
            console.info('false：' + ((1 & 2) == 1));//false
            console.info('true：' + ((1 & 3) == 1));//true
            console.info('true：' + ((2 & 3) == 2));//true
            console.info('true：' + ((1 & 5) == 1));//true
            console.info('false：' + ((2 & 5) == 2));//true
            console.info('true：' + ((4 & 5) == 4));//true
            console.info('false：' + ((1 & 6) == 1));//false
            console.info('true：' + ((2 & 6) == 2));//true
            console.info('true：' + ((4 & 6) == 4));//true
            console.info('true：' + ((1 & 7) == 1));//true
            console.info('true：' + ((2 & 7) == 2));//true
            console.info('true：' + ((4 & 7) == 4));//true

            //selectUserForm();
        });
        function selectUserForm() {
            organization = new OrganizationVM();

            //debugger;
            let searchOrgIds = [@KC.Framework.Tenant.OrganizationConstants.企业_Id];
            let searchRoleIds = [];
            let selectNode = {};
            let refCode = $.string.isNullOrEmpty(selectNode.code) ? '' : selectNode.code;
            let selectOrgIds = $.string.arrayFromCommaDelimitedStrings(selectNode.orgIds);
            let selectOrgNames = $.string.arrayFromCommaDelimitedStrings(selectNode.orgNames);
            let selectRoleIds = $.string.arrayFromCommaDelimitedStrings(selectNode.roleIds);
            let selectRoleNames = $.string.arrayFromCommaDelimitedStrings(selectNode.roleNames);
            let selectUserIds = $.string.arrayFromCommaDelimitedStrings(selectNode.userIds);
            let selectUserNames = $.string.arrayFromCommaDelimitedStrings(selectNode.userNames);
            let selectExceptUserIds = $.string.arrayFromCommaDelimitedStrings(selectNode.exceptUserIds);
            let selectExceptUserNames = $.string.arrayFromCommaDelimitedStrings(selectNode.exceptUserNames);
            let isSingle = false;
            organization.InitializeData({
                type: 7,                            //7(1+2+4): 组织+角色+用户
                title: "审批人设置（常用设置或选择组织、角色及用户二选一）",
                orgIds: searchOrgIds,               //需要查询的组织Id列表
                roleIds: searchRoleIds,             //需要查询的角色Id列表
                exceptOrgIds: [],                   //需要排除的部门Id列表
                exceptRoleIds: [],                  //需要排除的角色Id列表
                selectOrgIds: selectOrgIds,         //已选中的组织Id列表
                selectOrgNames: selectOrgNames,     //已选中的组织名称列表
                selectRoleIds: selectRoleIds,       //已选中的角色Id列表
                selectRoleNames: selectRoleNames,   //已选中的角色名称列表
                selectUserIds: selectUserIds,       //已选中的人员Id列表
                selectUserNames: selectUserNames,   //已选中的人员名称列表
                selectExceptUserIds: selectExceptUserIds,
                selectExceptUserNames: selectExceptUserNames,
                isSingleSelect: isSingle,
                referenceId: refCode,
                callback: function (data) {
                    //debugger;
                    let nodeSetting = data.executorSetting;
                    let formFieldName = data.executorFormFieldName;
                    let formFieldDisplayName = data.executorFormFieldDisplayName;
                    let refCode = data.referenceId;
                    let orgs = data.orgs;
                    let roles = data.roles;
                    let users = data.users;
                    let exceptUsers = data.exceptUsers;
                    let selOrgIds = $.array.toCommaSeparatedStringByFilter(orgs, function (r) { return r.organizationCode; });
                    let selOrgNames = $.array.toCommaSeparatedStringByFilter(orgs, function (r) { return r.text; });
                    let selRoleIds = $.array.toCommaSeparatedStringByFilter(roles, function (r) { return r.roleId; });
                    let selRoleNames = $.array.toCommaSeparatedStringByFilter(roles, function (r) { return r.displayName; });
                    let selUserIds = $.array.toCommaSeparatedStringByFilter(users, function (r) { return r.userId; });
                    let selUserNames = $.array.toCommaSeparatedStringByFilter(users, function (r) { return r.displayName; });
                    let selExceptUserIds = $.array.toCommaSeparatedStringByFilter(exceptUsers, function (r) { return r.userId; });
                    let selExceptUserNames = $.array.toCommaSeparatedStringByFilter(exceptUsers, function (r) { return r.displayName; });
                    let selectNode = WorkflowPropertyUtil.executorSettingNode(null, refCode, nodeSetting, formFieldName, formFieldDisplayName, selOrgIds, selOrgNames, selRoleIds, selRoleNames, selUserIds, selUserNames, selExceptUserIds, selExceptUserNames);

                    WorkflowPropertyUtil.updateExecutorSettingRowById(refCode, selectNode);
                }
            });
        }
    </script>
</body>
</html>